FROM oven/bun:1 AS frontend
WORKDIR /app

COPY dashboard/package.json dashboard/bun.lockb* ./dashboard/
RUN cd dashboard && bun install --frozen-lockfile

COPY dashboard/ ./dashboard/
RUN cd dashboard && bun run build

FROM golang:1.24-alpine AS builder

RUN apk add --no-cache upx git

WORKDIR /app

COPY go.mod go.sum ./
RUN go mod download

COPY --from=frontend /app/dashboard/dist ./dashboard/dist
COPY . .

ARG GIT_TAG
ARG GIT_COMMIT
ARG BUILD_TIME

RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo \
  -ldflags "-w -s \
    -X github.com/cheetahbyte/flagly/internal/version.Version=${GIT_TAG} \
    -X github.com/cheetahbyte/flagly/internal/version.Commit=${GIT_COMMIT} \
    -X github.com/cheetahbyte/flagly/internal/version.BuildTime=${BUILD_TIME}" \
  -o main .

RUN upx --best --lzma -o main-compressed main

FROM scratch

WORKDIR /root/

COPY --from=builder /app/main-compressed ./flagly

EXPOSE 8080
ENV PORT=8080
ENV GIN_MODE=release

ENTRYPOINT ["./flagly"]
